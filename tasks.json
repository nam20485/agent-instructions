{
  // See https://go.microsoft.com/fwlink/?LinkId=733558
  // for the documentation about the tasks.json format
  "version": "2.0.0",
  "tasks": [
    {
      "label": "AI Context: General Coding",
      "type": "shell",
      "command": "code",
      "args": [
        ".github/copilot-instructions.md",
        "ai_instruction_modules/ai-task-based-workflow.md",
        "ai_instruction_modules/ai-application-guidelines.md",
        "ai-instructions-aspnet-guidelines.md"
      ],
      "problemMatcher": [],
      "presentation": {
        "reveal": "never"
      },
      "detail": "Opens the core instruction files for a general coding task."
    },
    {
      "label": "AI Context: Testing",
      "type": "shell",
      "command": "code",
      "args": [
        ".github/copilot-instructions.md",
        "ai_instruction_modules/ai-testing-validation.md",
        "ai_instruction_modules/ai-task-based-workflow.md"
      ],
      "problemMatcher": [],
      "presentation": {
        "reveal": "never"
      },
      "detail": "Opens instruction files relevant to writing and validating tests."
    },
    {
      "label": "AI Context: New Application",
      "type": "shell",
      "command": "code",
      "args": [
        ".github/copilot-instructions.md",
        "ai_instruction_modules/ai-new-app-template.md",
        "ai_instruction_modules/ai-design-principles.md"
      ],
      "problemMatcher": [],
      "presentation": {
        "reveal": "never"
      },
	    "detail": "Opens instruction files for creating a new application from scratch."      
    },
    {
      "label": "PR Threads: Summarize (No Resolve)",
      "type": "shell",
      "command": "pwsh",
      "args": [
        "-NoProfile",
        "-ExecutionPolicy","Bypass",
        "-File","query.ps1",
        "-NoResolve",
        "-VerboseLogging"
      ],
      "problemMatcher": [],
      "presentation": { "reveal": "always" },
      "detail": "Generates a markdown summary of current PR review threads without resolving them."
    },
    {
      "label": "PR Threads: Resolve All",
      "type": "shell",
      "command": "pwsh",
      "args": [
        "-NoProfile",
        "-ExecutionPolicy","Bypass",
        "-File","query.ps1"
      ],
      "problemMatcher": [],
      "presentation": { "reveal": "always" },
      "detail": "Resolves all unresolved threads on the default PR (#3) and updates summary file."
    },
    {
      "label": "PR Threads: Dry Run IDs",
      "type": "shell",
      "command": "pwsh",
      "args": [
        "-NoProfile",
        "-ExecutionPolicy","Bypass",
        "-File","query.ps1",
        "-DryRun"
      ],
      "problemMatcher": [],
      "presentation": { "reveal": "always" },
      "detail": "Lists unresolved thread IDs without resolving them."
    },
    {
      "label": "Env: Provision (Windows)",
      "type": "shell",
      "command": "pwsh",
      "args": [
  "-NoProfile",
  "-ExecutionPolicy",
  "Bypass",
  "-File",
  "scripts/setup-environment.ps1"
      ],
      "problemMatcher": [],
      "presentation": { "reveal": "always" },
      "detail": "Provision local env on Windows via NVM-only script (exact Node pin)."
    },
    {
      "label": "Env: Provision (Linux)",
      "type": "shell",
      "command": "bash",
      "args": [
  "scripts/setup-environment.sh"
      ],
      "problemMatcher": [],
      "presentation": { "reveal": "always" },
      "detail": "Provision local env on Linux using the consolidated script."
    }
    ,
    {
      "label": "Orchestrate: Dry Run (workflow)",
      "type": "shell",
      "command": "node",
      "args": [
        "./scripts/orchestrator.mjs",
        "--dry-run",
        "--workflow",
        "${input:orchestrator.workflow}",
        "--log",
        "logs/${input:orchestrator.workflow}-dryrun.jsonl",
        "--console"
      ],
      "problemMatcher": [],
      "presentation": { "reveal": "always" },
      "detail": "Plan and emit JSONL without executing; prompts for workflow name."
    },
    {
      "label": "Orchestrate: Dry Run (file)",
      "type": "shell",
      "command": "node",
      "args": [
        "./scripts/orchestrator.mjs",
        "--dry-run",
        "--file",
        "${input:orchestrator.file}",
        "--fixtures",
        "${input:orchestrator.fixtures}",
        "--log",
        "${input:orchestrator.log}",
        "--console"
      ],
      "problemMatcher": [],
      "presentation": { "reveal": "always" },
      "detail": "Plan and emit JSONL for a specific file; prompts for file path, fixtures, and log path."
    },
    {
      "label": "Orchestrate: Real (workflow)",
      "type": "shell",
      "command": "node",
      "args": [
        "./scripts/orchestrator.mjs",
        "--workflow",
        "${input:orchestrator.workflow}",
        "--params",
        "${input:orchestrator.params}",
        "--log",
        "logs/${input:orchestrator.workflow}-exec.jsonl",
        "--console"
      ],
      "problemMatcher": [],
      "presentation": { "reveal": "always" },
      "detail": "Execute planned actions with real executors; prompts for workflow and optional params file."
    },
    {
      "label": "Orchestrate: Real (file)",
      "type": "shell",
      "command": "node",
      "args": [
        "./scripts/orchestrator.mjs",
        "--file",
        "${input:orchestrator.file}",
        "--params",
        "${input:orchestrator.params}",
        "--log",
        "${input:orchestrator.log}",
        "--console"
      ],
      "problemMatcher": [],
      "presentation": { "reveal": "always" },
      "detail": "Execute actions from a specific file; prompts for file path and optional params/log."
    }
  ]
  ,
  "inputs": [
    {
      "id": "orchestrator.workflow",
      "type": "promptString",
      "description": "Workflow name (file under dynamic-workflows/<name>.md)",
      "default": "sample-minimal"
    },
    {
      "id": "orchestrator.file",
      "type": "promptString",
      "description": "Absolute or relative path to workflow .md file",
      "default": "ai_instruction_modules/ai-workflow-assignments/dynamic-workflows/new-project.md"
    },
    {
      "id": "orchestrator.fixtures",
      "type": "promptString",
      "description": "Optional fixtures JSON (blank to skip)",
      "default": ""
    },
    {
      "id": "orchestrator.params",
      "type": "promptString",
      "description": "Optional params JSON for assignment inputs (blank to skip)",
      "default": "fixtures/sample-params.json"
    },
    {
      "id": "orchestrator.log",
      "type": "promptString",
      "description": "Optional log JSONL path (blank for default in some tasks)",
      "default": ""
    }
  ]
}
